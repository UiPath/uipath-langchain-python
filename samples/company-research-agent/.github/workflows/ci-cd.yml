name: Build and Deploy Company Research Agent

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'samples/company-research-agent/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'samples/company-research-agent/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/company-research-agent

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./samples/company-research-agent
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          CLIENT_ID=${{ secrets.UIPATH_CLIENT_ID }}
          CLIENT_SECRET=${{ secrets.UIPATH_CLIENT_SECRET }}
          BASE_URL=${{ secrets.UIPATH_BASE_URL }}
          ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
          TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run container tests
      run: |
        docker run --rm \
          -e CLIENT_ID=${{ secrets.UIPATH_CLIENT_ID }} \
          -e CLIENT_SECRET=${{ secrets.UIPATH_CLIENT_SECRET }} \
          -e BASE_URL=${{ secrets.UIPATH_BASE_URL }} \
          -e ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }} \
          -e TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }} \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          /bin/bash -c "echo 'Container health check passed'"

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # For example, deploy to Azure Container Instances, AWS ECS, or Kubernetes
