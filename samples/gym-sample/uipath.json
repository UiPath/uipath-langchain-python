{
    "entryPoints": [
        {
            "filePath": "agent",
            "uniqueId": "1747605b-cb0d-41e5-a316-9c58b29ca600",
            "type": "agent",
            "input": {
                "type": "object",
                "properties": {
                    "messages": {
                        "default": [],
                        "items": {
                            "anyOf": [
                                {
                                    "additionalProperties": true,
                                    "description": "Base abstract message class.\n\nMessages are the inputs and outputs of ChatModels.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "type"
                                    ],
                                    "title": "BaseMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message for priming AI behavior.\n\nThe system message is usually passed in as the first of a sequence\nof input messages.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Define a chat model and invoke it with the messages\n        print(model.invoke(messages))",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "system",
                                            "default": "system",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "SystemMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message for passing the result of executing a tool back to a model.\n\nToolMessages contain the result of a tool invocation. Typically, the result\nis encoded inside the `content` field.\n\nExample: A ToolMessage representing a result of 42 from a tool call with id\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        ToolMessage(content='42', tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL')\n\n\nExample: A ToolMessage where only part of the tool output is sent to the model\n    and the full output is passed in to artifact.\n\n    .. versionadded:: 0.2.17\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        tool_output = {\n            \"stdout\": \"From the graph we can see that the correlation between x and y is ...\",\n            \"stderr\": None,\n            \"artifacts\": {\"type\": \"image\", \"base64_data\": \"/9j/4gIcSU...\"},\n        }\n\n        ToolMessage(\n            content=tool_output[\"stdout\"],\n            artifact=tool_output,\n            tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL',\n        )\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "tool",
                                            "default": "tool",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "tool_call_id": {
                                            "title": "Tool Call Id",
                                            "type": "string"
                                        },
                                        "artifact": {
                                            "default": null,
                                            "title": "Artifact"
                                        },
                                        "status": {
                                            "default": "success",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "title": "Status",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "tool_call_id"
                                    ],
                                    "title": "ToolMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message from a human.\n\nHumanMessages are messages that are passed in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Instantiate a chat model and invoke it with the messages\n        model = ...\n        print(model.invoke(messages))",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "human",
                                            "default": "human",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "example": {
                                            "default": false,
                                            "title": "Example",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "HumanMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message from an AI.\n\nAIMessage is returned from a chat model as a response to a prompt.\n\nThis message represents the output of the model and consists of both\nthe raw output as returned by the model together standardized fields\n(e.g., tool calls, usage metadata) added by the LangChain framework.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "ai",
                                            "default": "ai",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "example": {
                                            "default": false,
                                            "title": "Example",
                                            "type": "boolean"
                                        },
                                        "tool_calls": {
                                            "default": [],
                                            "items": {
                                                "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\".",
                                                "properties": {
                                                    "name": {
                                                        "title": "Name",
                                                        "type": "string"
                                                    },
                                                    "args": {
                                                        "additionalProperties": true,
                                                        "title": "Args",
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "const": "tool_call",
                                                        "title": "Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "args",
                                                    "id"
                                                ],
                                                "title": "ToolCall",
                                                "type": "object"
                                            },
                                            "title": "Tool Calls",
                                            "type": "array"
                                        },
                                        "invalid_tool_calls": {
                                            "default": [],
                                            "items": {
                                                "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "args": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "const": "invalid_tool_call",
                                                        "title": "Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "args",
                                                    "id",
                                                    "error"
                                                ],
                                                "title": "InvalidToolCall",
                                                "type": "object"
                                            },
                                            "title": "Invalid Tool Calls",
                                            "type": "array"
                                        },
                                        "usage_metadata": {
                                            "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``.",
                                            "properties": {
                                                "input_tokens": {
                                                    "title": "Input Tokens",
                                                    "type": "integer"
                                                },
                                                "output_tokens": {
                                                    "title": "Output Tokens",
                                                    "type": "integer"
                                                },
                                                "total_tokens": {
                                                    "title": "Total Tokens",
                                                    "type": "integer"
                                                },
                                                "input_token_details": {
                                                    "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9\n\nMay also hold extra provider-specific keys.",
                                                    "properties": {
                                                        "audio": {
                                                            "title": "Audio",
                                                            "type": "integer"
                                                        },
                                                        "cache_creation": {
                                                            "title": "Cache Creation",
                                                            "type": "integer"
                                                        },
                                                        "cache_read": {
                                                            "title": "Cache Read",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "title": "InputTokenDetails",
                                                    "type": "object"
                                                },
                                                "output_token_details": {
                                                    "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9",
                                                    "properties": {
                                                        "audio": {
                                                            "title": "Audio",
                                                            "type": "integer"
                                                        },
                                                        "reasoning": {
                                                            "title": "Reasoning",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "title": "OutputTokenDetails",
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "input_tokens",
                                                "output_tokens",
                                                "total_tokens"
                                            ],
                                            "title": "UsageMetadata",
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "AIMessage",
                                    "type": "object"
                                }
                            ]
                        },
                        "title": "Messages",
                        "type": "array"
                    },
                    "result": {
                        "additionalProperties": true,
                        "default": {},
                        "title": "Result",
                        "type": "object"
                    },
                    "raised_error": {
                        "properties": {
                            "message": {
                                "description": "The error message to display to the user. This should be a brief on line message.",
                                "title": "Message",
                                "type": "string"
                            },
                            "details": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional additional details about the error. This can be a multiline text with more details. Only populate this if there are relevant details not already captured in the error message.",
                                "title": "Details"
                            }
                        },
                        "required": [
                            "message",
                            "details"
                        ],
                        "title": "RaiseErrorInput",
                        "type": "object"
                    },
                    "run_init_state": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {},
                        "title": "Run Init State",
                        "type": "object"
                    }
                },
                "required": []
            },
            "output": {
                "type": "object",
                "properties": {
                    "messages": {
                        "default": null,
                        "items": {
                            "anyOf": [
                                {
                                    "additionalProperties": true,
                                    "description": "Base abstract message class.\n\nMessages are the inputs and outputs of ChatModels.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "type"
                                    ],
                                    "title": "BaseMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message for priming AI behavior.\n\nThe system message is usually passed in as the first of a sequence\nof input messages.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Define a chat model and invoke it with the messages\n        print(model.invoke(messages))",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "system",
                                            "default": "system",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "SystemMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message for passing the result of executing a tool back to a model.\n\nToolMessages contain the result of a tool invocation. Typically, the result\nis encoded inside the `content` field.\n\nExample: A ToolMessage representing a result of 42 from a tool call with id\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        ToolMessage(content='42', tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL')\n\n\nExample: A ToolMessage where only part of the tool output is sent to the model\n    and the full output is passed in to artifact.\n\n    .. versionadded:: 0.2.17\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        tool_output = {\n            \"stdout\": \"From the graph we can see that the correlation between x and y is ...\",\n            \"stderr\": None,\n            \"artifacts\": {\"type\": \"image\", \"base64_data\": \"/9j/4gIcSU...\"},\n        }\n\n        ToolMessage(\n            content=tool_output[\"stdout\"],\n            artifact=tool_output,\n            tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL',\n        )\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "tool",
                                            "default": "tool",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "tool_call_id": {
                                            "title": "Tool Call Id",
                                            "type": "string"
                                        },
                                        "artifact": {
                                            "default": null,
                                            "title": "Artifact"
                                        },
                                        "status": {
                                            "default": "success",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "title": "Status",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "tool_call_id"
                                    ],
                                    "title": "ToolMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message from a human.\n\nHumanMessages are messages that are passed in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Instantiate a chat model and invoke it with the messages\n        model = ...\n        print(model.invoke(messages))",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "human",
                                            "default": "human",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "example": {
                                            "default": false,
                                            "title": "Example",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "HumanMessage",
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": true,
                                    "description": "Message from an AI.\n\nAIMessage is returned from a chat model as a response to a prompt.\n\nThis message represents the output of the model and consists of both\nthe raw output as returned by the model together standardized fields\n(e.g., tool calls, usage metadata) added by the LangChain framework.",
                                    "properties": {
                                        "content": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "type": "array"
                                                }
                                            ],
                                            "title": "Content"
                                        },
                                        "additional_kwargs": {
                                            "additionalProperties": true,
                                            "title": "Additional Kwargs",
                                            "type": "object"
                                        },
                                        "response_metadata": {
                                            "additionalProperties": true,
                                            "title": "Response Metadata",
                                            "type": "object"
                                        },
                                        "type": {
                                            "const": "ai",
                                            "default": "ai",
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "example": {
                                            "default": false,
                                            "title": "Example",
                                            "type": "boolean"
                                        },
                                        "tool_calls": {
                                            "default": [],
                                            "items": {
                                                "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\".",
                                                "properties": {
                                                    "name": {
                                                        "title": "Name",
                                                        "type": "string"
                                                    },
                                                    "args": {
                                                        "additionalProperties": true,
                                                        "title": "Args",
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "const": "tool_call",
                                                        "title": "Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "args",
                                                    "id"
                                                ],
                                                "title": "ToolCall",
                                                "type": "object"
                                            },
                                            "title": "Tool Calls",
                                            "type": "array"
                                        },
                                        "invalid_tool_calls": {
                                            "default": [],
                                            "items": {
                                                "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "args": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "const": "invalid_tool_call",
                                                        "title": "Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "args",
                                                    "id",
                                                    "error"
                                                ],
                                                "title": "InvalidToolCall",
                                                "type": "object"
                                            },
                                            "title": "Invalid Tool Calls",
                                            "type": "array"
                                        },
                                        "usage_metadata": {
                                            "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``.",
                                            "properties": {
                                                "input_tokens": {
                                                    "title": "Input Tokens",
                                                    "type": "integer"
                                                },
                                                "output_tokens": {
                                                    "title": "Output Tokens",
                                                    "type": "integer"
                                                },
                                                "total_tokens": {
                                                    "title": "Total Tokens",
                                                    "type": "integer"
                                                },
                                                "input_token_details": {
                                                    "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9\n\nMay also hold extra provider-specific keys.",
                                                    "properties": {
                                                        "audio": {
                                                            "title": "Audio",
                                                            "type": "integer"
                                                        },
                                                        "cache_creation": {
                                                            "title": "Cache Creation",
                                                            "type": "integer"
                                                        },
                                                        "cache_read": {
                                                            "title": "Cache Read",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "title": "InputTokenDetails",
                                                    "type": "object"
                                                },
                                                "output_token_details": {
                                                    "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9",
                                                    "properties": {
                                                        "audio": {
                                                            "title": "Audio",
                                                            "type": "integer"
                                                        },
                                                        "reasoning": {
                                                            "title": "Reasoning",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "title": "OutputTokenDetails",
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "input_tokens",
                                                "output_tokens",
                                                "total_tokens"
                                            ],
                                            "title": "UsageMetadata",
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "content"
                                    ],
                                    "title": "AIMessage",
                                    "type": "object"
                                }
                            ]
                        },
                        "title": "Messages",
                        "type": "array"
                    },
                    "result": {
                        "additionalProperties": true,
                        "default": null,
                        "title": "Result",
                        "type": "object"
                    },
                    "raised_error": {
                        "properties": {
                            "message": {
                                "description": "The error message to display to the user. This should be a brief on line message.",
                                "title": "Message",
                                "type": "string"
                            },
                            "details": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional additional details about the error. This can be a multiline text with more details. Only populate this if there are relevant details not already captured in the error message.",
                                "title": "Details"
                            }
                        },
                        "required": [
                            "message",
                            "details"
                        ],
                        "title": "RaiseErrorInput",
                        "type": "object"
                    },
                    "run_init_state": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": null,
                        "title": "Run Init State",
                        "type": "object"
                    }
                },
                "required": []
            }
        }
    ],
    "bindings": {
        "version": "2.0",
        "resources": []
    }
}